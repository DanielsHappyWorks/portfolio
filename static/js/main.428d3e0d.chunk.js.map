{"version":3,"sources":["_header/Header.js","_content/Content.js","_footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["SuperCoolComponent","M","AutoInit","socialMediaLinks","data","map","link","key","href","class","icon","name","id","src","profileBackground","alt","profileImage","email","resume","download","data-target","Component","Content","links","iconColour","collapsibleContent","collabsableContent","content","elm","picture","title","date","description","cards","cardData","card","list","jobTitle","bio","Footer","footer","heading","copyright","React","App","className","Header","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.428d3e0d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport data from '../data.json';\r\nimport './header.scss';\r\n\r\n// Import Materialize\r\nimport M from \"materialize-css\";\r\n\r\n\r\nclass SuperCoolComponent extends Component {\r\n\r\n  componentDidMount() {\r\n    // Auto initialize all the things!\r\n    M.AutoInit();\r\n  }\r\n\r\n  render() {\r\n    var socialMediaLinks = data.socialMediaLinks.map(function (link) {\r\n      return <li key=\"link.name\"><a href={link.link} class=\"waves-effect\"><i class={\"fab \" + link.icon + \" overrideIcon\"}></i>{link.name}</a></li>;\r\n    })\r\n    \r\n    return (\r\n      <header>\r\n        <ul id=\"slide-out\" class=\"sidenav sidenav-fixed\">\r\n          <li>\r\n            <div class=\"user-view\">\r\n              <div class=\"background\">\r\n                <img src={data.profileBackground} alt=\"background\" />\r\n              </div>\r\n              <img class=\"circle\" src={data.profileImage} alt=\"profile\" />\r\n              <span class=\"white-text name\">{data.name}</span>\r\n              <a href=\"#email\">\r\n                <span class=\"white-text email\">{data.email}</span>\r\n              </a>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <a href={data.resume.link} class=\"waves-effect\" download><i class=\"far fa-file-pdf overrideIcon\"></i>{data.resume.name}</a>\r\n          </li>\r\n          <li>\r\n            <div class=\"divider\">\r\n            </div>\r\n          </li>\r\n          <li >\r\n            <a class=\"subheader\">Links</a>\r\n          </li>\r\n          {socialMediaLinks}\r\n        </ul>\r\n\r\n        <div class=\"container\">\r\n          <a data-target=\"slide-out\" class=\"top-nav sidenav-trigger full hide-on-large-only\"><i class=\"material-icons\">menu</i></a>\r\n        </div>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SuperCoolComponent;","import React, { Component } from 'react';\r\nimport './content.scss';\r\nimport data from '../data.json';\r\nimport M from \"materialize-css\";\r\n\r\n\r\nclass Content extends Component {\r\n\r\n  componentDidMount() {\r\n    // Auto initialize all the things!\r\n    M.AutoInit();\r\n  }\r\n\r\n  render() {\r\n    var links = data.socialMediaLinks.map(function (link) {\r\n      return <a href={link.link} class={\"btn-floating \" + link.iconColour + \" waves-effect padLeft pulse\"}><i class={\"fab \" + link.icon + \" overrideIcon lineHight\"}></i></a>;\r\n    })\r\n\r\n    var collapsibleContent = data.collabsableContent.map(function (content) {\r\n      return (\r\n        <li class={content.class}>\r\n          <div class=\"collapsible-header\"><i class=\"material-icons iconColor\">{content.icon}</i>{content.name}</div>\r\n          <div class=\"collapsible-body\">\r\n            <div class=\"collection\">\r\n\r\n              {content.data.map(function (elm) {\r\n                return (\r\n                  <li class=\"collection-item avatar\">\r\n                    <img src={elm.picture} alt=\"\" class=\"circle\" />\r\n                    <span class=\"title\">{elm.title}</span>\r\n                    <p>{elm.date}<br />{elm.description}</p>\r\n                  </li>\r\n                )\r\n              })}\r\n            </div>\r\n          </div>\r\n        </li>\r\n      )\r\n    })\r\n\r\n    var cards = data.cardData.map(function (card) {\r\n      return (\r\n        <div class=\"col s4\">\r\n          <div class=\"card-panel minHeight\">\r\n            <p class=\"flow-text\">{card.title}</p>\r\n            <div class=\"divider\"></div>\r\n            <ul >\r\n              {card.list.map(function (list) { return <li><i class={list.icon + \" cardIcon\"}></i><span>{list.name}</span></li> })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <main>\r\n        <div class=\"container\">\r\n          <div class=\"card horizontal\">\r\n            <div class=\"card-image\">\r\n              <img class=\"circle\" src=\"resources/images/daniel.jpg\" />\r\n            </div>\r\n            <div class=\"card-stacked\">\r\n              <div class=\"card-content \">\r\n                <span class=\"card-title activator grey-text text-darken-4\">{data.name}</span>\r\n                <p>{data.jobTitle}</p>\r\n              </div>\r\n              <div class=\"card-tabs\">\r\n                <ul class=\"tabs tabs-fixed-width\">\r\n                  <li class=\"tab\"><a class=\"active\" href=\"#test4\">About Me</a></li>\r\n                  <li class=\"tab\"><a href=\"#test5\">Resume</a></li>\r\n                  <li class=\"tab\"><a href=\"#test6\">Links</a></li>\r\n                </ul>\r\n              </div>\r\n              <div class=\"card-content grey lighten-5\">\r\n                <div id=\"test4\">{data.bio}</div>\r\n                <div id=\"test5\">\r\n                  <a href=\"resources/cv.pdf\" class=\"btn waves-effect waves-light\" download><i class=\"far fa-file-pdf padRight\"></i>Download CV</a></div>\r\n                <div id=\"test6\">{links}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <ul class=\"collapsible\">{collapsibleContent}</ul>\r\n\r\n          <div class=\"row\">{cards}</div>\r\n        </div>\r\n      </main >\r\n    )\r\n  }\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\nimport data from '../data.json';\r\nimport './footer.scss';\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    var links = data.socialMediaLinks.map(function (link) {\r\n      return <li><a class=\"grey-text text-lighten-3\" href={link.link}>{link.name}</a></li>;\r\n    })\r\n\r\n    return (\r\n      <footer class=\"page-footer\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col l6 s12\">\r\n              <h5 class=\"white-text\">{data.footer.heading}</h5>\r\n              <p class=\"grey-text text-lighten-4\">{data.footer.content}</p>\r\n            </div>\r\n            <div class=\"col l4 offset-l2 s12\">\r\n              <h5 class=\"white-text\">Links</h5>\r\n              <ul>{links}</ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"footer-copyright\">\r\n          <div class=\"container\">{data.footer.copyright}</div>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Header from './_header/Header.js';\r\nimport Content from './_content/Content.js';\r\nimport Footer from './_footer/Footer.js';\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header/>\r\n      <Content/>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}